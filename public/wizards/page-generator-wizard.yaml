id: page-generator
name: Page Generator Wizard
description: Create complete pages with proper layout, responsive behavior, and component reuse
icon: 📄
category: feature
version: 1.0.0

settings:
  allowBackNavigation: true
  saveProgress: true
  estimatedTime: 12

phases:
  # Phase 1: Page Purpose
  - id: page-purpose
    name: Page Purpose
    type: question
    prompt: |
      Let's create a page that's consistent with your design system! 📄
      
      I'll help ensure we build it right the first time with proper layout, responsive behavior, and component reuse.
      
      What page do you want to create? Describe its main purpose.
      
      Examples:
      • "Product listing page with filters and search"
      • "User dashboard showing stats and recent activity"
      • "Settings page with multiple sections"
      • "Landing page for marketing campaign"
    inputType: textarea
    validation:
      required: true
      minLength: 20
      message: Please describe the page's purpose

  - id: page-type
    name: Page Type
    type: selection
    prompt: |
      What type of page is this?
    inputType: radio
    options:
      - id: listing
        label: List/Grid page (shows multiple items)
        value: listing
        icon: 📋
      - id: detail
        label: Detail page (single item focus)
        value: detail
        icon: 📄
      - id: dashboard
        label: Dashboard (data overview)
        value: dashboard
        icon: 📊
      - id: form
        label: Form page (data entry)
        value: form
        icon: 📝
      - id: landing
        label: Landing/Marketing page
        value: landing
        icon: 🎯
      - id: settings
        label: Settings/Configuration page
        value: settings
        icon: ⚙️

  # Phase 2: Design References
  - id: mockup-status
    name: Design Reference
    type: selection
    prompt: |
      Do you have mockups or reference designs for this page?
    inputType: radio
    options:
      - id: flexos-mockup
        label: Yes, in FlexOS mockup tool
        value: flexos-mockup
        icon: 🎨
      - id: external-design
        label: Yes, in Figma/Sketch/Images
        value: external-design
        icon: 🖼️
      - id: similar-pages
        label: Yes, similar pages already exist
        value: similar-pages
        icon: 📄
      - id: description
        label: No, but I can describe it
        value: description
        icon: 💭
      - id: create-mockup
        label: I want to create a mockup first
        value: create-mockup
        icon: 🆕

  - id: mockup-path
    name: Mockup Location
    type: question
    prompt: |
      Great! Where can I find your FlexOS mockup?
      
      Enter the path (e.g., /mockups/pages/dashboard.html)
    inputType: text
    validation:
      required: true
      pattern: '^/mockups/.*\.html$'
      message: Please enter a valid mockup path starting with /mockups/
    dependencies: ["mockup-status"]
    branching:
      conditions:
        - if:
            phase: mockup-status
            operator: equals
            value: flexos-mockup
          then: mockup-path

  - id: page-description
    name: Visual Description
    type: question
    prompt: |
      Describe how you envision this page visually. Include:
      
      • Main sections/areas
      • Key components (header, sidebar, cards, etc.)
      • Important features (search, filters, actions)
      • Overall style/feel
    inputType: textarea
    validation:
      required: true
      minLength: 50
      message: Please provide a detailed description
    dependencies: ["mockup-status"]
    branching:
      conditions:
        - if:
            phase: mockup-status
            operator: equals
            value: description
          then: page-description

  # Phase 3: Layout Structure
  - id: layout-type
    name: Layout Structure
    type: selection
    prompt: |
      What layout structure should this page use?
      
      I'll show you visual examples:
    inputType: radio
    options:
      - id: sidebar-left
        label: |
          Sidebar + Content
          ┌─────┬──────────┐
          │ Nav │ Content  │
          └─────┴──────────┘
        value: sidebar-left
        icon: 📐
      - id: full-width
        label: |
          Full Width
          ┌────────────────┐
          │    Content     │
          └────────────────┘
        value: full-width
        icon: 🖥️
      - id: centered
        label: |
          Centered Container
          ┌──┬──────────┬──┐
          │  │ Content  │  │
          └──┴──────────┴──┘
        value: centered
        icon: 📦
      - id: split
        label: |
          Split View
          ┌────────┬────────┐
          │  Left  │ Right  │
          └────────┴────────┘
        value: split
        icon: 🔀
      - id: dashboard
        label: |
          Dashboard Grid
          ┌─────┬─────┬─────┐
          │  A  │  B  │  C  │
          ├─────┴─────┼─────┤
          │     D     │  E  │
          └───────────┴─────┘
        value: dashboard
        icon: 📊

  # Phase 4: Responsive Behavior
  - id: mobile-layout
    name: Mobile Layout
    type: selection
    prompt: |
      How should this page adapt on mobile devices (< 768px)?
    inputType: checkboxes
    options:
      - id: stack-vertical
        label: Stack all sections vertically
        value: stack-vertical
        icon: 📱
      - id: hide-sidebar
        label: Hide sidebar, show menu button
        value: hide-sidebar
        icon: 🍔
      - id: bottom-nav
        label: Move navigation to bottom
        value: bottom-nav
        icon: 📲
      - id: simplify
        label: Show simplified version
        value: simplify
        icon: ✨
      - id: horizontal-scroll
        label: Allow horizontal scroll for tables/grids
        value: horizontal-scroll
        icon: ↔️

  - id: tablet-behavior
    name: Tablet Behavior
    type: selection
    prompt: |
      What about tablet layout (768px - 1024px)?
    inputType: radio
    options:
      - id: same-desktop
        label: Same as desktop
        value: same-desktop
        icon: 💻
      - id: narrower
        label: Desktop layout but narrower
        value: narrower
        icon: 📐
      - id: collapsible
        label: Collapsible sidebar
        value: collapsible
        icon: 🔄
      - id: same-mobile
        label: Same as mobile
        value: same-mobile
        icon: 📱

  # Phase 5: Components & Features
  - id: page-components
    name: Page Components
    type: selection
    prompt: |
      Which components/features does this page need?
    inputType: checkboxes
    options:
      - id: header
        label: Page header with title/actions
        value: header
        icon: 🎯
      - id: search
        label: Search functionality
        value: search
        icon: 🔍
      - id: filters
        label: Filter options
        value: filters
        icon: 🔽
      - id: sorting
        label: Sort controls
        value: sorting
        icon: 🔤
      - id: pagination
        label: Pagination
        value: pagination
        icon: 📖
      - id: infinite-scroll
        label: Infinite scroll
        value: infinite-scroll
        icon: ♾️
      - id: data-table
        label: Data table
        value: data-table
        icon: 📊
      - id: card-grid
        label: Card grid
        value: card-grid
        icon: 🎴
      - id: charts
        label: Charts/visualizations
        value: charts
        icon: 📈
      - id: forms
        label: Form inputs
        value: forms
        icon: 📝
      - id: modals
        label: Modal dialogs
        value: modals
        icon: 🪟
      - id: tabs
        label: Tab navigation
        value: tabs
        icon: 📑

  # Phase 6: Data & State
  - id: data-source
    name: Data Source
    type: selection
    prompt: |
      Where will this page get its data?
    inputType: radio
    options:
      - id: api
        label: API endpoint
        value: api
        icon: 🔌
      - id: static
        label: Static/hardcoded data
        value: static
        icon: 📄
      - id: database
        label: Direct database query
        value: database
        icon: 🗄️
      - id: global-state
        label: Global state (Vuex/Pinia)
        value: global-state
        icon: 🌐
      - id: props
        label: Props from parent
        value: props
        icon: 📦

  - id: loading-states
    name: Loading & States
    type: selection
    prompt: |
      Which states should this page handle?
    inputType: checkboxes
    options:
      - id: loading
        label: Loading state (skeleton/spinner)
        value: loading
        icon: ⏳
      - id: empty
        label: Empty state (no data)
        value: empty
        icon: 📭
      - id: error
        label: Error state
        value: error
        icon: ⚠️
      - id: offline
        label: Offline state
        value: offline
        icon: 📴
      - id: success
        label: Success messages
        value: success
        icon: ✅

  # Phase 7: SEO & Performance
  - id: seo-needs
    name: SEO Requirements
    type: selection
    prompt: |
      Does this page need SEO optimization?
    inputType: radio
    options:
      - id: critical
        label: Yes, critical for SEO (public facing)
        value: critical
        icon: 🎯
      - id: helpful
        label: Yes, would be helpful
        value: helpful
        icon: 👍
      - id: not-needed
        label: No, internal/auth-required page
        value: not-needed
        icon: 🔒

  - id: performance-needs
    name: Performance Priority
    type: selection
    prompt: |
      What are the performance priorities for this page?
    inputType: checkboxes
    options:
      - id: fast-load
        label: Fast initial load
        value: fast-load
        icon: ⚡
      - id: smooth-scroll
        label: Smooth scrolling (long lists)
        value: smooth-scroll
        icon: 📜
      - id: quick-filter
        label: Quick filtering/search
        value: quick-filter
        icon: 🔍
      - id: lazy-load
        label: Lazy load images/content
        value: lazy-load
        icon: 🖼️
      - id: cache
        label: Cache data
        value: cache
        icon: 💾

  # Phase 8: Final Details
  - id: page-route
    name: Page Route
    type: question
    prompt: |
      What should the URL route be for this page?
      
      Examples: /dashboard, /products, /settings/profile
    inputType: text
    validation:
      required: true
      pattern: '^/[a-z0-9-/]*$'
      message: Start with / and use lowercase letters, numbers, hyphens

  - id: page-name
    name: Component Name
    type: question
    prompt: |
      What should we name this page component?
      
      Use PascalCase (e.g., ProductList, UserDashboard)
    inputType: text
    validation:
      required: true
      pattern: '^[A-Z][a-zA-Z0-9]*Page$'
      message: Use PascalCase and end with "Page" (e.g., DashboardPage)

  # Phase 9: Review
  - id: complete
    name: Page Specification Complete
    type: review
    prompt: |
      📄 **Page Specification Complete!**
      
      **Page:** {{answers.page-name}}
      **Route:** {{answers.page-route}}
      **Type:** {{answers.page-type}}
      **Layout:** {{answers.layout-type}}
      
      **Features:**
      {{#each answers.page-components}}
      • {{this}}
      {{/each}}
      
      **Responsive:**
      • Mobile: {{answers.mobile-layout}}
      • Tablet: {{answers.tablet-behavior}}
      
      **I'll generate:**
      1. Complete Vue page component
      2. Responsive layout structure
      3. All selected components
      4. Data fetching logic
      5. Loading/error states
      6. Route configuration
      7. Tests and documentation
      
      Ready to build your page? 🚀
    inputType: text

outputs:
  - id: page-component
    name: Page Component
    type: code
    files:
      - path: "pages/{{answers.page-name}}.vue"
        generator: generatePageComponent
      - path: "pages/{{answers.page-name}}.test.ts"
        generator: generatePageTests
  
  - id: sub-components
    name: Page Sub-components
    type: code
    files:
      - path: "components/{{answers.page-name}}/PageHeader.vue"
        generator: generatePageHeader
      - path: "components/{{answers.page-name}}/PageFilters.vue"
        generator: generatePageFilters
        
  - id: route-config
    name: Route Configuration
    type: config
    files:
      - path: "router/routes/{{answers.page-route}}.ts"
        generator: generateRouteConfig
        
  - id: documentation
    name: Page Documentation
    type: documentation
    files:
      - path: "docs/pages/{{answers.page-name}}.md"
        generator: generatePageDocs